#!/bin/bash
# coo pre-processor

FILEIN="$1"
FILEOUT="`echo \"$1\" | sed -e 's/\(.*\)\.coo/\1.c/g'`"

echo '#include <stdlib.h>' > $FILEOUT
sed "$FILEIN" -e '
	# CLASS DEFINITION
	s/\<class\> *\(\<.*\>\)/struct _class_\1/g
	# MEMBER FUNCTION DEFINITION
	s/\(\<.*\>\) *\(\<.*\>\)::\(.*(\)/\1 _class_\2_\3struct _class_\2 \*this, /g
	# NEW OPERATOR
	s/\(\<.*\>\)\( *\* *\(\<.*\>\) *= *\)\<new\> *\(\<.*\>\)/struct _class_\1\2malloc(sizeof(struct _class_\4));\n\3->new()/g
	# DELETE OPERATION
	s/\<delete\> *\(\<.*\>\)/\1->delete();\nfree(\1)/g
' >> $FILEOUT

classes="`sed -n \"$FILEIN\" -e '
	s/.* *\(\<.*\>\)::.*/\1/p
'|sort|uniq`"

class_i=""
for line in $classes; do
	class_i="$class_i`sed "$FILEIN" -n -e 's/\<'$line'\> *\* *\(\<.*\>\) *= *\<new\>.*/'$line' \1/p'|sort|uniq`"
done

sed_cmd=""
tms=`echo $class_i|wc -w`
tms=$((tms/2))
for line in `seq $tms`; do
	c=`echo $class_i|awk '{print $'$((line*2-1))'}'`
	i=`echo $class_i|awk '{print $'$((line*2))'}'`
	sed_cmd=$sed_cmd's/\<'$i'\> *-> *\([a-zA-Z_][0-9a-zA-Z_]*(\)/_class_'$c'_\1'$i', /g; '
done

sed -i "$FILEOUT" -e "$sed_cmd"
sed -i "$FILEOUT" -e 's/\(.*\), *)/\1)/g'

